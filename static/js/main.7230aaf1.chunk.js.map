{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","isLoading","initialState","isTodoLoading","currentTodoReducer","state","action","query","status","filterReducer","todos","todosIsLoading","error","setTodosActionCreator","setTodosIsLoadingAction","loadingStatus","setTodosErrorAction","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","selectedTodo","useState","isButtonActive","setIsButtonActive","filteredTodos","title","toLowerCase","includes","completed","length","className","map","classNames","id","onClick","prev","TodoFilter","setQuery","setStatus","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","removeTodo","setIsTodoLoading","user","setUser","useEffect","userId","finally","href","email","name","App","gottenTodos","catch","e","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7230aaf1.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\ntype SetIsLoadingAction = {\n  type: 'currentTodo/SET_loading';\n  payload: boolean;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => (\n  { type: 'currentTodo/REMOVE' }\n);\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nconst setIsTodoLoading = (isLoading: boolean): SetIsLoadingAction => ({\n  type: 'currentTodo/SET_loading',\n  payload: isLoading,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo, setIsTodoLoading };\n\ninterface State {\n  todo: Todo | null,\n  isTodoLoading: boolean,\n}\n\nconst initialState: State = {\n  todo: null,\n  isTodoLoading: false,\n};\n\ntype Action = SetTodoAction | RemoveTodoAction | SetIsLoadingAction;\n\nconst currentTodoReducer = (\n  state = initialState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return {\n        ...state,\n        todo: null,\n      };\n    case 'currentTodo/SET':\n      return {\n        ...state,\n        todo: action.payload,\n      };\n    case 'currentTodo/SET_loading':\n      return {\n        ...state,\n        isTodoLoading: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","interface State {\n  query: string,\n  status: string,\n}\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\ninterface SetQueryAction {\n  type: 'query/SET',\n  payload: string,\n}\n\ninterface SetStatusAction {\n  type: 'status/SET',\n  payload: string,\n}\n\ntype Action = SetQueryAction | SetStatusAction;\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'query/SET',\n  payload: query,\n});\n\nconst setStatus = (status: string): SetStatusAction => ({\n  type: 'status/SET',\n  payload: status,\n});\n\nexport const actions = { setQuery, setStatus };\n\nconst filterReducer = (state = initialState, action: Action): State => {\n  switch (action.type) {\n    case 'query/SET':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'status/SET':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ninterface State {\n  todos: Todo[];\n  todosIsLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: State = {\n  todos: [],\n  todosIsLoading: false,\n  error: null,\n};\n\ntype SetTodosAction = {\n  type: 'todos/set_todos',\n  payload: Todo[],\n};\n\ntype SetTodosIsLoadingAction = {\n  type: 'todos/set_todos_isLoading',\n  payload: boolean,\n};\n\ntype SetTodosErrorAction = {\n  type: 'todos/set_todos_error',\n  payload: string | null,\n};\n\nexport const setTodosActionCreator = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/set_todos',\n  payload: todos,\n});\n\nexport const setTodosIsLoadingAction = (\n  loadingStatus: boolean,\n): SetTodosIsLoadingAction => ({\n  type: 'todos/set_todos_isLoading',\n  payload: loadingStatus,\n});\n\nexport const setTodosErrorAction = (\n  error: string | null,\n): SetTodosErrorAction => ({\n  type: 'todos/set_todos_error',\n  payload: error,\n});\n\ntype Action = SetTodosAction | SetTodosIsLoadingAction | SetTodosErrorAction;\n\nexport const actions = {\n  setTodosActionCreator,\n  setTodosIsLoadingAction,\n  setTodosErrorAction,\n};\n\nconst todosReducer = (state = initialState, action: Action): State => {\n  switch (action.type) {\n    case 'todos/set_todos':\n      return {\n        ...state,\n        todos: action.payload,\n      };\n    case 'todos/set_todos_isLoading':\n      return {\n        ...state,\n        todosIsLoading: action.payload,\n      };\n    case 'todos/set_todos_error':\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const todos = useAppSelector((state: RootState) => state.todos.todos);\n  const selectedTodo = useAppSelector((state: RootState) => state.currentTodo.todo);\n  const { query, status } = useAppSelector((state: RootState) => state.filter);\n  const [isButtonActive, setIsButtonActive] = useState(false);\n\n  const queriedTodos = todos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  const filteredTodos = queriedTodos.filter(todo => {\n    switch (status) {\n      case 'all':\n        return true;\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return true;\n    }\n  });\n\n  return (\n    <>\n      {filteredTodos.length === 0 && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {filteredTodos.map(todo => (\n            <tr\n              data-cy=\"todo\"\n              key={todo.id}\n              className={classNames({ 'has-background-info-light': selectedTodo?.id === todo.id })}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    dispatch(actions.setTodo(todo));\n                    setIsButtonActive(prev => !prev);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(isButtonActive\n                      && selectedTodo?.id === todo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye')}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { actions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector((state: RootState) => state.filter);\n  const { setQuery, setStatus } = actions;\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              dispatch(setStatus(event.target.value));\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            dispatch(setQuery(event.target.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                dispatch(setQuery(''));\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <h1>Loading</h1>\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { actions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const {\n    todo,\n    isTodoLoading,\n  } = useAppSelector((state: RootState) => state.currentTodo);\n  const { removeTodo, setIsTodoLoading } = actions;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    dispatch(setIsTodoLoading(true));\n    if (todo) {\n      getUser(todo.userId)\n        .then(res => setUser(res))\n        .finally(() => dispatch(setIsTodoLoading(false)));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isTodoLoading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => dispatch(removeTodo())}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{todo?.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo?.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n                {' by '}\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { setTodosActionCreator, setTodosErrorAction, setTodosIsLoadingAction } from './features/todos';\nimport { RootState } from './app/store';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const isLoading = useAppSelector((state: RootState) => state.todos.todosIsLoading);\n  const selectedTodo = useAppSelector((state: RootState) => state.currentTodo.todo);\n\n  useEffect(() => {\n    dispatch(setTodosIsLoadingAction(true));\n    getTodos()\n      .then(gottenTodos => dispatch(setTodosActionCreator(gottenTodos)))\n      .catch((e) => dispatch(setTodosErrorAction(e)))\n      .finally(() => dispatch(setTodosIsLoadingAction(false)));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}